#!/usr/bin/env bash
# Inject or refresh repository mapping cross-link snippet into each microrepo README.
# Relies on snippet generated by post-cutover-automation.sh (cross-link-snippet.md)
# Usage: ./migration/update-cross-links.sh --micro-root ./_out --snippet ./_out/cross-link-snippet.md
set -euo pipefail
MICRO_ROOT=""; SNIPPET=""
while [[ $# -gt 0 ]]; do
  case $1 in
    --micro-root) MICRO_ROOT=$2; shift 2;;
    --snippet) SNIPPET=$2; shift 2;;
    -h|--help) grep '^# ' "$0" | sed 's/^# //'; exit 0;;
    *) echo "Unknown arg $1" >&2; exit 1;;
  esac
done
[[ -z $MICRO_ROOT || -z $SNIPPET ]] && { echo "--micro-root and --snippet required" >&2; exit 1; }
[[ ! -f $SNIPPET ]] && { echo "Snippet $SNIPPET missing" >&2; exit 1; }

marker_start="<!-- CROSS-LINK-MAP:START -->"
marker_end="<!-- CROSS-LINK-MAP:END -->"
snippet_content=$(printf "%s\n%s\n" "$marker_start" "$(cat "$SNIPPET")"; echo "$marker_end")

for repo in "$MICRO_ROOT"/*; do
  [[ -d $repo/.git ]] || continue
  readme="$repo/README.md"
  if [[ ! -f $readme ]]; then echo "[SKIP] $(basename "$repo") no README" >&2; continue; fi
  if grep -q "$marker_start" "$readme"; then
    awk -v ms="$marker_start" -v me="$marker_end" -v repl="$snippet_content" 'BEGIN{printed=0} {
      if($0==ms){inblk=1; if(!printed){print repl; printed=1} next}
      if($0==me){inblk=0; next}
      if(!inblk) print $0
    } END{ if(!printed) print repl }' "$readme" > "$readme.tmp" && mv "$readme.tmp" "$readme"
  else
    printf "\n%s\n" "$snippet_content" >> "$readme"
  fi
  echo "[UPDATED] $(basename "$repo")" >&2
 done

echo "[DONE] Cross-links updated" >&2
